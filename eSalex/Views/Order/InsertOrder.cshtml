@model eSalex.Models.OrderViewModel

@{
    ViewBag.Title = "InsertOrder";
}

<h2>新增訂單</h2>


<form action="InsertOrder" enctype="multipart/form-data" method="post">

    @Html.AntiForgeryToken()
            
    <table class="table table-hover">
        <tr>
            <td>
                @Html.LabelFor(model => model.CustName, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.DropDownList("CustId")
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.EmpName, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.DropDownList("EmpId")
            </td>
        </tr>

        <tr>
            <td>
                &nbsp @Html.LabelFor(model => model.Orderdate, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.Orderdate, new { htmlAttributes = new { @class = "form-control",@type = "date" } })
                @Html.ValidationMessageFor(model => model.Orderdate, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.LabelFor(model => model.RequiredDate, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.RequiredDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.RequiredDate, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.ShippedDate, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.ShippedDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.ShippedDate, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.ShiperName, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.DropDownList("ShipperId")
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.Freight, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.Freight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Freight, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.ShipCountry, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.ShipCountry, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShipCountry, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.LabelFor(model => model.ShipCity, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.ShipCity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShipCity, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.ShipRegion, htmlAttributes: new { @class = "control-label " })
            </td>
            <td>
                @Html.EditorFor(model => model.ShipRegion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShipRegion, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.LabelFor(model => model.ShipPostalCode, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.ShipPostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShipPostalCode, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.ShipAddress, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.ShipAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShipAddress, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.LabelFor(model => model.ShipName, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.ShipName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShipName, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                訂單金額總計
            </td>
            <td>
                @Html.EditorFor(model => model.OrderId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderId, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                <input type="submit" value="存檔" class="btn btn-default" />
            </td>
            <td>
                @Html.ActionLink("返回上一頁", "Index")
            </td>
        </tr>

    </table>

       
</form>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
